image: docker.nodevops.cn/frontend/node-build:latest

stages:
  - build
  - test
  - codereview
  - deploy
  - bundle
  - preview
  - alert

compile:
  stage: build
  only:
    - tester
    - tags
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/

sonar:
  stage: codereview
  only:
    - schedules
  before_script:
    - npm install
    - npm run test
  script:
    - sonar-scanner
  cache:
    paths:
      - node_modules/

deploy to test:
  stage: deploy
  only:
    - tester
  environment:
    name: test
    url: http://yundun.test.nodevops.cn
  dependencies:
    - compile
  script:
    - rsync -rve ssh dist/* root@172.16.100.103:/data/home-console/yundun/static
    - rsync -rve ssh dist/* root@172.16.100.103:/data/home-console/$CI_COMMIT_SHA
  after_script:
    - echo "deploy test env done."
  when:
    on_success

release_bundle:
  stage: bundle
  only:
    - tags
  dependencies:
    - compile
  script:
    - rsync -aR dist/ root@172.16.100.103:/tmp/home-console/
    - rsync scripts/release_bundle.sh root@172.16.100.103:/tmp
    - ssh root@172.16.100.103 "sh /tmp/release_bundle.sh $CI_COMMIT_SHORT_SHA"
  when:
    on_success

release_preview:
  stage: preview
  only:
    - tags
  dependencies:
    - release_bundle
  script:
    - rsync scripts/release_preview.sh root@172.16.100.103:/tmp
    - ssh root@172.16.100.103 "sh /tmp/release_preview.sh $CI_COMMIT_SHORT_SHA"
  when:
    on_success

release_alert:
  stage: alert
  only:
    - tags
  before_script:
    - npm i axios
  dependencies:
    - release_preview
  script:
    - node ./scripts/release_alert.js $CI_PROJECT_ID $CI_COMMIT_SHORT_SHA $CI_COMMIT_TAG
  when:
    on_success